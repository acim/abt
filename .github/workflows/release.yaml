on:
  release:
    types: [created]
  workflow_dispatch:

env:
  CMD_PATH: ./cmd/abt
  BINARY_NAME: abt
  GO_VERSION: 1.15.8
  CGO_ENABLED: 0

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Set up go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Set up linters
        run: |
          GO111MODULE=on go get github.com/golangci/golangci-lint/cmd/golangci-lint
          go get -u golang.org/x/lint/golint
      - name: Check out
        uses: actions/checkout@v2
      - name: Lint
        run: |
          make lint
  releases-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: ['386', arm64, amd64]
        exclude:
          - goarch: '386'
            goos: windows
          - goarch: '386'
            goos: darwin
          - goarch: arm64
            goos: windows
          - goarch: arm64
            goos: darwin
    steps:
      - uses: actions/checkout@v2
      - uses: wangyoucao577/go-release-action@v1.14
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: 'https://golang.org/dl/go${{ env.GO_VERSION }}.linux-amd64.tar.gz'
          project_path: '${{ env.CMD_PATH }}'
          ldflags: -s -w
          build_flags: -a -installsuffix cgo
          binary_name: '${{ env.BINARY_NAME }}'
